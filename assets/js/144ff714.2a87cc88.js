"use strict";(self.webpackChunkwriteups_docs=self.webpackChunkwriteups_docs||[]).push([[6405],{3905:(e,n,i)=>{i.d(n,{Zo:()=>s,kt:()=>f});var t=i(7294);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function o(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function a(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?o(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,t,r=function(e,n){if(null==e)return{};var i,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)i=o[t],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)i=o[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var c=t.createContext({}),p=function(e){var n=t.useContext(c),i=n;return e&&(i="function"==typeof e?e(n):a(a({},n),e)),i},s=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var i=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(i),d=r,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return i?t.createElement(f,a(a({ref:n},s),{},{components:i})):t.createElement(f,a({ref:n},s))}));function f(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=i.length,a=new Array(o);a[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var p=2;p<o;p++)a[p]=i[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,i)}d.displayName="MDXCreateElement"},3314:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var t=i(7462),r=(i(7294),i(3905));const o={},a="IMAGINARY",l={unversionedId:"2021/IMAGINARYCTF/challenges/imaginary",id:"2021/IMAGINARYCTF/challenges/imaginary",title:"IMAGINARY",description:"- File : imaginary.py",source:"@site/docs/2021/IMAGINARYCTF/challenges/imaginary.md",sourceDirName:"2021/IMAGINARYCTF/challenges",slug:"/2021/IMAGINARYCTF/challenges/imaginary",permalink:"/docs/2021/IMAGINARYCTF/challenges/imaginary",draft:!1,editUrl:"https://github.com/Pynard/writeups-docs/tree/main/packages/create-docusaurus/templates/shared/docs/2021/IMAGINARYCTF/challenges/imaginary.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FORMATTING",permalink:"/docs/2021/IMAGINARYCTF/challenges/formatting"},next:{title:"ROOS_WORLD",permalink:"/docs/2021/IMAGINARYCTF/challenges/roos_world"}},c={},p=[],s={toc:p};function u(e){let{components:n,...o}=e;return(0,r.kt)("wrapper",(0,t.Z)({},s,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"imaginary"},"IMAGINARY"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Description\nWhat's ImaginaryCTF without good old sqrt(-1)?\n\nAttachments\nhttps://imaginaryctf.org/r/CE4D-imaginary.py nc chal.imaginaryctf.org 42015\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"File : ",(0,r.kt)("a",{target:"_blank",href:i(2284).Z},"imaginary.py"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'#!/usr/bin/env python3\n\nimport random\nfrom solve import solve\n\nbanner = \'\'\'\nWelcome to the Imaginary challenge! I\'m gonna give you 300 imaginary/complex number problems, and your job is to solve them all. Good luck!\n\nSample input: (55+42i) + (12+5i) - (124+15i)\nSample output: -57+32i\n\nSample input: (23+32i) + (3+500i) - (11+44i)\nSample output: 15+488i\n\n(NOTE: DO NOT USE eval() ON THE CHALLENGE OUTPUT. TREAT THIS IS UNTRUSTED INPUT. Every once in a while the challenge will attempt to forkbomb your system if you are using eval(), so watch out!)\n\'\'\'\n\nflag = open("flag.txt", "r").read()\nops = [\'+\', \'-\']\n\nprint(banner)\n\nfor i in range(300):\n    o = random.randint(0,50)\n    if o > 0:\n        nums = []\n        chosen_ops = []\n        for n in range(random.randint(2, i+2)):\n            nums.append([random.randint(0,50), random.randint(0,50)])\n            chosen_ops.append(random.choice(ops))\n        out = ""\n        for op, num in zip(chosen_ops, nums):\n            out += f"({num[0]}+{num[1]}i) {op} "\n        out = out[:-3]\n        print(out)\n        ans = input("> ")\n        if ans.strip() == solve(out).strip():\n            print("Correct!")\n        else:\n            print("That\'s incorrect. :(")\n            exit()\n    else:\n        n = random.choice("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ")\n        payload = f"__import__[\'os\'].system(\'{n}(){{ {n}|{n} & }};{{{n}}}\')"\n        print(payload)\n        input("> ")\n        print("Correct!")\n\nprint("You did it! Here\'s your flag!")\nprint(flag)\n')),(0,r.kt)("p",null,"Here we have to solve complex equations, but we have 1/50 chance to get a forkbomb so : ",(0,r.kt)("strong",{parentName:"p"},"no eval")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ ncat chal.imaginaryctf.org 42015\nWelcome to the Imaginary challenge! I'm gonna give you 300 imaginary/complex number problems, and your job is to solve them all. Good luck!\n\nSample input: (55+42i) + (12+5i) - (124+15i)\nSample output: -57+32i\n\nSample input: (23+32i) + (3+500i) - (11+44i)\nSample output: 15+488i\n\n(NOTE: DO NOT USE eval() ON THE CHALLENGE OUTPUT. TREAT THIS IS UNTRUSTED INPUT. Every once in a while the challenge will attempt to forkbomb your system if you are using eval(), so watch out!)\n\n(45+34i) - (37+37i)\n> 8-3i\nCorrect!\n(27+29i) + (42+40i) + (6+31i)\n> \n")),(0,r.kt)("p",null,"Here is a script that solve the equations :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fichier : ",(0,r.kt)("a",{target:"_blank",href:i(571).Z},"exploit.py"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from pwn import *\n\nconn = remote('chal.imaginaryctf.org', 42015)\n\nconn.recvuntil(b'out!)\\n\\n')\n\nfor _ in range(300):\n    received = conn.recvuntil(b'\\n')[:-1].decode('utf-8')\n    if '__import__' in received:\n        print(received)\n        result = 'forkbomb\\n'\n    else:\n        print(received,end=' = ')\n        equation = received.split(' ')\n        \n        c = []\n        operands = []\n        for i,elt in enumerate(equation):\n            if i%2 == 0:\n                c += [complex(elt[1:-1].replace('i','j'))]\n            else:\n                operands += [elt]\n        \n        result = c[0] \n        for i,op in enumerate(operands):\n            if op == '+':\n                result += c[i+1]\n            elif op == '-':\n                result -= c[i+1]\n        \n        result = (result.__str__()[1:-1].replace('j','i')+'\\n')\n        print(result)\n        \n    conn.send(result.encode())\n    received = conn.recvuntil(b'\\n')[:-1].decode('utf-8')\n    print(received)\n\nprint(conn.recvall().decode())\n")),(0,r.kt)("p",null,"Here is the output :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ python exploit.py\n[...]\n> Correct!\n(3+8i) - (32+37i) - (29+48i) - (37+9i) + (11+3i) + (0+4i) + (48+45i) - (19+35i) - (24+1i) + (48+12i) + (38+48i) + (14+9i) + (15+50i) + (44+27i) + (39+42i) - (39+43i) - (27+4i) + (29+48i) + (18+18i) + (9+13i) - (23+6i) - (24+27i) - (27+16i) + (22+20i) + (21+34i) - (12+45i) - (21+41i) - (42+33i) + (40+16i) - (20+37i) + (42+17i) + (9+24i) + (27+10i) - (48+38i) - (35+33i) + (7+46i) + (3+41i) + (35+34i) - (7+46i) - (47+27i) - (42+50i) + (20+43i) - (30+20i) + (36+37i) + (50+41i) - (12+41i) + (27+24i) + (15+35i) - (24+20i) + (26+4i) - (18+41i) + (16+37i) - (7+18i) + (15+5i) + (2+28i) - (1+15i) + (26+16i) + (31+11i) + (25+5i) - (27+37i) - (30+28i) + (5+13i) + (35+22i) + (37+43i) - (10+14i) + (17+6i) + (41+11i) + (24+1i) + (14+36i) - (29+17i) - (36+4i) - (30+48i) - (28+42i) + (33+22i) + (39+9i) - (12+8i) - (19+32i) - (26+46i) + (36+6i) + (41+20i) - (27+17i) + (26+28i) + (2+11i) - (32+21i) + (1+36i) + (38+48i) - (24+44i) - (33+11i) + (19+24i) - (15+4i) - (44+49i) + (38+12i) - (34+9i) + (1+13i) - (17+48i) + (40+22i) - (32+13i) + (48+47i) + (47+19i) - (29+13i) + (23+44i) - (6+30i) - (46+43i) + (49+8i) - (38+22i) + (35+10i) - (35+25i) - (29+29i) - (41+11i) + (16+32i) - (50+15i) - (8+23i) - (34+34i) - (36+7i) - (44+25i) - (27+10i) - (7+43i) - (44+25i) + (17+1i) + (19+22i) - (2+7i) - (34+34i) + (16+35i) + (50+10i) + (39+20i) - (1+24i) + (36+45i) - (25+23i) + (26+46i) + (45+10i) - (49+48i) - (25+36i) - (42+33i) + (14+30i) - (28+40i) - (26+40i) + (31+1i) - (44+40i) + (26+24i) - (7+38i) + (27+42i) + (15+42i) - (10+39i) + (42+14i) + (20+15i) - (50+49i) - (40+30i) - (36+3i) + (2+3i) - (47+27i) - (4+50i) + (49+45i) - (29+38i) = -135-374i\n\n> Correct!\n[+] Receiving all data: Done (77B)\n[*] Closed connection to chal.imaginaryctf.org port 42015\nYou did it! Here's your flag!\nictf{n1c3_y0u_c4n_4dd_4nd_subtr4ct!_49fd21bc}\n")),(0,r.kt)("p",null,"flag : ",(0,r.kt)("inlineCode",{parentName:"p"},"ictf{n1c3_y0u_c4n_4dd_4nd_subtr4ct!_49fd21bc}")))}u.isMDXComponent=!0},571:(e,n,i)=>{i.d(n,{Z:()=>t});const t=i.p+"assets/files/exploit-a7b89b2dc4e3b2c73a35e7eebe4e98b6.py"},2284:(e,n,i)=>{i.d(n,{Z:()=>t});const t=i.p+"assets/files/imaginary-ccf1c38d66e8bbbc9f9560e67b47445e.py"}}]);